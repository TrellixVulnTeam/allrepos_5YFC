<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build-all" name="PubnubApi" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <loadfile property="VERSION" srcFile="../VERSION"><filterchain><striplinebreaks/></filterchain></loadfile>
    <property environment="env"/>
    <property name="pubnub_jar_file_name" value="Pubnub-StandardEdition-${VERSION}.jar"/>
    <property name="pubnub_debug_jar_file_name" value="Pubnub-StandardEdition-Debug-${VERSION}.jar"/>
    <property name="pubnub_unittests_jar_file_name" value="Pubnub-UnitTests-${VERSION}.jar"/>
    <property name="srcPubnubApi.link" value="srcPubnubApi"/>
    <property name="sources_pubnub_api" value="${srcPubnubApi.link}/com/pubnub/api"/>
    <property name="sources_pubnub_logging" value="srcLogging/com/pubnub/api"/>
    <property name="sources_pubnub_java1" value="src1/com/pubnub/api"/>
    <property name="sources_pubnub_java" value="src/com/pubnub/api"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <property name="debug" value="false"/>
    <path id="PubnubApi.classpath">
        <pathelement location="bin"/>
        <pathelement location="libs/bcprov-jdk15on-1.47.jar"/>
        <pathelement location="libs/json-20090211.jar"/>
        <pathelement location="libs/slf4j-api-1.7.5.jar"/>
        <pathelement location="libs/junit-4.11.jar"/>
        <pathelement location="jars/Pubnub-UnitTests-${VERSION}.jar"/>
    </path>
    <target name="build-all" depends="debug-build, build" />
    <path id="PubnubTests.classpath">
        <pathelement location="${pubnub_jar_file_name}"/>
        <pathelement location="libs/hamcrest-all-1.3.jar"/>
    </path>
    <target name="setDebugTrue" >
        <replace dir="${srcPubnubApi.link}" token="boolean LOGGING = false" value="boolean LOGGING = true">
            <include name="**/*.java"/>
        </replace>
    </target>
    <target name="unsetDebugTrue" >
        <replace dir="${srcPubnubApi.link}" token="boolean LOGGING = true" value="boolean LOGGING = false">
            <include name="**/*.java"/>
        </replace>
    </target>
    <target name="test" >
       <junit haltonfailure="yes" printsummary="yes" showoutput="true" >
            <classpath refid="PubnubApi.classpath" />
            <classpath refid="PubnubTests.classpath" />
            <formatter type="plain" usefile="false" />
            <batchtest>
                <zipfileset src="jars/${pubnub_unittests_jar_file_name}" includes="**/PubnubTest.class" />
            </batchtest>
       </junit>
    </target>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="${srcPubnubApi.link}">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean_bin">
        <delete dir="bin"/>
    </target>
    <target depends="clean_bin" name="clean">
        <delete file="${pubnub_jar_file_name}"/>
        <delete>
            <fileset dir="jars" includes="**/*.jar"/>
        </delete>
    </target>
    <target name="build" depends="clean">
        <delete file="${pubnub_jar_file_name}"/>
        <antcall target="build-jar">
            <param name="jar_name" value="${pubnub_jar_file_name}" />
            <param name="debug" value="false" />
        </antcall>
    </target>
    <target name="debug-build" depends="clean">
        <delete file="${pubnub_debug_jar_file_name}"/>
        <antcall target="setDebugTrue" />
        <antcall target="build-jar">
            <param name="jar_name" value="${pubnub_debug_jar_file_name}" />
            <param name="debug" value="true" />
        </antcall>
        <antcall target="unsetDebugTrue" />
    </target>

    <target depends="create-jar, create-test-jar, create-examples-jar, create-demo-console-jar, clean_bin, doc" name="build-jar"/>
    <target depends="build-project" name="create-jar">
        <jar destfile="${jar_name}"
            basedir="bin"
            includes="**/**"
            excludes="**/*Test*.class"
        />
    </target>

    <target depends="build-project" name="create-test-jar">
        <jar destfile="jars/${pubnub_unittests_jar_file_name}"
            basedir="bin"
            includes="**/*Test*.class"
        />
    </target>

    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <replace dir="${srcPubnubApi.link}" token='static String VERSION = ""' value='static String VERSION = "${VERSION}"' >
            <include name="**/*.java"/>
        </replace>
        <javac destdir="bin" debug="${debug}" source="${source}" target="${target}">
            <src path="${srcPubnubApi.link}"/>
            <src path="src"/>
            <src path="src1"/>
            <src path="srcLogging"/>
            <src path="srcTest"/>
            <src path="examples/src"/>
            <classpath refid="PubnubApi.classpath"/>
        </javac>
        <replace dir="${srcPubnubApi.link}" token='static String VERSION = "${VERSION}"' value='static String VERSION = ""'>
            <include name="**/*.java"/>
        </replace>
    </target>

    <macrodef name="delete_old_jar">
        <attribute name="jar.filename" />
        <sequential>
            <delete file="@{jar.filename}">
            </delete>
        </sequential>
    </macrodef>

    <macrodef name="create_dirs">
        <sequential>
            <mkdir dir="jar_temp" />
            <mkdir dir="jar_temp/META-INF" />
        </sequential>
    </macrodef>

    <macrodef name="delete_temp_dirs">
        <sequential>
            <delete dir="jar_temp">
            </delete>
        </sequential>
    </macrodef>

    <macrodef name="create_manifest">
        <attribute name="jar.classname" />
        <sequential>
            <manifest file="jar_temp/META-INF/MANIFEST.MF">
                <attribute name="Manifest-Version" value="1.0" />
                <attribute name="Version" value="3.4" />
                <attribute name="Company" value="Pubnub" />
                <attribute name="Project" value="pubnub-api" />
                <attribute name="Java-Version" value="${java.version}" />
                <attribute name="Rsrc-Class-Path" value="./ bcprov-jdk15on-1.47.jar json-20090211.jar slf4j-api-1.7.5.jar slf4j-simple-1.7.5.jar" />
                <attribute name="Class-Path" value="." />
                <attribute name="Rsrc-Main-Class" value="@{jar.classname}" />
                <attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader" />
            </manifest>
        </sequential>
    </macrodef>

    <macrodef name="create_jar">
        <attribute name="jar.filename" />
        <sequential>
            <jar destfile="jars/@{jar.filename}" manifest="jar_temp/META-INF/MANIFEST.MF" basedir="jar_temp">
            </jar>
        </sequential>
    </macrodef>

    <macrodef name="copy_class_files">
        <sequential>
            <copy todir="jar_temp">
                <fileset dir="bin">
                    <include name="*/**" />
                </fileset>
                <fileset dir="libs">
                    <include name="*/**" />
                </fileset>
            </copy>
        </sequential>
    </macrodef>
    <macrodef name="create-jar">
        <attribute name="jar.type" />
        <attribute name="jar.classname" />
        <attribute name="jar.filename" />


        <sequential>
            <delete_old_jar jar.filename="@{jar.filename}" />
            <create_dirs />
            <create_manifest jar.classname="@{jar.classname}" />
            <copy_class_files />
            <create_jar jar.filename="@{jar.filename}" />
            <delete_temp_dirs  />
        </sequential>
    </macrodef>
    <target name="create-examples-jar">
        <create-jar jar.type="examples" jar.classname="com.pubnub.examples.PubnubExample" jar.filename="PubnubExample.jar" />
    </target>
    <target name="create-demo-console-jar">
        <create-jar jar.type="examples" jar.classname="com.pubnub.examples.PubnubDemoConsole" jar.filename="PubnubDemoConsole.jar" />
    </target>
    <target name="doc" depends="init" description="generate documentation">
        <javadoc access="public" sourcepath="srcPubnubApi:src:srcLogging:src1" destdir="doc" classpathref="PubnubApi.classpath"/>
      </target>

      <property name="src" location="src" />
      <property name="maven" location="maven" />
    <property name="build" location="build" />
    <property name="dist" location="dist" />

    <xmlproperty file="pom.xml" keepRoot="false" semanticAttributes="true"/>

    <property name="maven-jar" value="${dist}/lib/${artifactId}-${version}.jar" />
    <property name="maven-javadoc-jar" value="${dist}/lib/${artifactId}-${version}-javadoc.jar" />
    <property name="maven-sources-jar" value="${dist}/lib/${artifactId}-${version}-sources.jar" />

    <property name="maven-staging-repository-id" value="sonatype-nexus-staging" />
    <property name="maven-staging-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />

    <target name="debug-compile" description="compile the source with logging and debug">
        <replace dir="${maven}/src" token="boolean LOGGING = false" value="boolean LOGGING = true">
            <include name="**/*.java"/>
        </replace>
        <javac debug="${debug}" srcdir="${maven}/src" destdir="${build}" >
            <classpath refid="PubnubApi.classpath"/>
        </javac>
        <replace dir="${maven}/src" token="boolean LOGGING = true" value="boolean LOGGING = false">
            <include name="**/*.java"/>
        </replace>
    </target>
    <target name="compile" description="compile the source ">
        <javac debug="${debug}" srcdir="${maven}/src" destdir="${build}" >
            <classpath refid="PubnubApi.classpath"/>
        </javac>
    </target>

    <target name="dist" depends="compile" description="generate the distribution">

        <jar jarfile="${maven-jar}" basedir="${build}" />

        <javadoc sourcepath="${maven}/src" destdir="${dist}/javadoc" >
            <classpath refid="PubnubApi.classpath"/>
        </javadoc>
        <jar jarfile="${maven-javadoc-jar}">
            <fileset dir="${dist}/javadoc" />
        </jar>

        <jar jarfile="${maven-sources-jar}">
            <fileset dir="${maven}/src" />
        </jar>
    </target>

    <target name="stage" depends="dist" description="deploy release version to Maven staging repository">
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${maven-staging-repository-url}" />
            <arg value="-DrepositoryId=${maven-staging-repository-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${maven-jar}" />
                        <arg value="-Pgpg" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${maven-staging-repository-url}" />
            <arg value="-DrepositoryId=${maven-staging-repository-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${maven-sources-jar}" />
            <arg value="-Dclassifier=sources" />
                        <arg value="-Pgpg" />
        </artifact:mvn>

        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${maven-staging-repository-url}" />
            <arg value="-DrepositoryId=${maven-staging-repository-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${maven-javadoc-jar}" />
            <arg value="-Dclassifier=javadoc" />
                        <arg value="-Pgpg" />
        </artifact:mvn>
    </target>

    <target name="maven_clean" description="clean up">
        <delete dir="${build}" />
        <delete dir="${dist}" />
        <delete dir="${maven}" />
        <delete file="pom.xml.asc" />
    </target>

    <target name="push_to_maven_central" >
        <mkdir dir="${build}" />
        <mkdir dir="${maven}/src/com/pubnub/api" />
        <copy todir="${maven}/src/com/pubnub/api" >
            <fileset dir="${sources_pubnub_java}" />
            <fileset dir="${sources_pubnub_java1}" />
            <fileset dir="${sources_pubnub_logging}" />
            <fileset dir="${sources_pubnub_api}" />
        </copy>
        <mkdir dir="${dist}/lib" />
        <antcall target="stage"/>
        <antcall target="maven_clean"/>
    </target>

    <target name="push_debug_to_maven_central" >
        <mkdir dir="${build}" />
        <mkdir dir="${maven}/src/com/pubnub/api" />
        <copy todir="${maven}/src/com/pubnub/api" >
            <fileset dir="${sources_pubnub_java}" />
            <fileset dir="${sources_pubnub_java1}" />
            <fileset dir="${sources_pubnub_logging}" />
            <fileset dir="${sources_pubnub_api}" />
        </copy>
        <replace dir="${maven}/src" token="boolean LOGGING = false" value="boolean LOGGING = true">
            <include name="**/*.java"/>
        </replace>
        <replace dir="." token="artifactId>pubnub" value="artifactId>pubnub-debug">
            <include name="**/pom.xml"/>
        </replace>
        <mkdir dir="${dist}/lib" />
        <antcall target="stage">
            <param name="debug" value="true" />
        </antcall>
        <antcall target="maven_clean"/>
        <replace dir="." token="artifactId>pubnub-debug" value="artifactId>pubnub">
            <include name="**/pom.xml"/>
        </replace>
    </target>

</project>
